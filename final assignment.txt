Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537, user_id
ix. User = 10000
x. Friend = 11
xi. Elite_years = 10000

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	
	SELECT COUNT(*) FROM user
	WHERE coalesce(id, name, review_count, yelping_since, useful, funny, cool, fans, average_stars, compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos) IS NULL

	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT City, count(*) AS CUMSUM FROM review
	LEFT JOIN business ON review.business_id = business.id
	GROUP BY business.City 
	ORDER BY CUMSUM DESC
	
	Copy and Paste the Result Below:
+-----------------+--------+
|            city | CUMSUM |
+-----------------+--------+
|            None |   9364 |
|       Las Vegas |    193 |
|         Phoenix |     65 |
|         Toronto |     51 |
|      Scottsdale |     37 |
|       Henderson |     30 |
|           Tempe |     28 |
|      Pittsburgh |     23 |
|        Chandler |     22 |
|       Charlotte |     21 |
|        Montréal |     18 |
|         Madison |     16 |
|         Gilbert |     13 |
|            Mesa |     13 |
|       Cleveland |     12 |
| North Las Vegas |      6 |
|       Edinburgh |      5 |
|        Glendale |      5 |
|        Lakewood |      5 |
|      Cave Creek |      4 |
|       Champaign |      4 |
|         Markham |      4 |
|      North York |      4 |
|     Mississauga |      3 |
|        Surprise |      3 |
+-----------------+--------+
(Output limit exceeded, 25 of 68 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon has no distribution, because no review are linked to that city. 

SQL code used to arrive at answer:
SELECT review.stars, count(*) FROM review
LEFT JOIN business ON review.business_id = business.id
WHERE City = 'Avon'
GROUP BY review.stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+----------+
| stars | count(*) |
+-------+----------+
+-------+----------+
(Zero rows)

ii. Beachwood

SQL code used to arrive at answer:
SELECT review.stars, count(*) FROM review
LEFT JOIN business ON review.business_id = business.id
WHERE City = 'Beachwood'
GROUP BY review.stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+----------+
| stars | count(*) |
+-------+----------+
|     3 |        1 |
+-------+----------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT name FROM user
	ORDER BY review_count DESC
	limit 3
		
	Copy and Paste the Result Below:
+--------+
| name   |
+--------+
| Gerald |
| Sara   |
| Yuri   |
+--------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	Looking at the data, there does seem to be a correlation, as a higher amount of reviews generally has more fans than lower amount of reviews.	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: The amount of reviews with the word love in it are 1780, and the amount of reviews with hate are 232, so there are more review with the word love in it.

	
	SQL code used to arrive at answer:
SELECT count(*) FROM review
WHERE TEXT LIKE '%love%'

and

SELECT count(*) FROM review
WHERE TEXT LIKE '%hate%'
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
SELECT name FROM user
ORDER BY review_count DESC
limit 10	
	
	Copy and Paste the Result Below:
+-----------+
| name      |
+-----------+
| Gerald    |
| Sara      |
| Yuri      |
| .Hon      |
| William   |
| Harald    |
| eric      |
| Roanna    |
| Mimi      |
| Christine |
+-----------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
I chose Beachwood as city.


GROUP BY med_high_rank */

SELECT name, hours, 
CASE  
WHEN Stars >=2 and Stars <= 3 THEN 'medium'
WHEN Stars >=4 and Stars <= 5 then 'high' ELSE 'Other' END med_high_rank
FROM Business b
LEFT JOIN hours h ON b.id = h.business_id 
WHERE med_high_rank <> 'Other' and City = 'Beachwood'

yields

+---------------------------------+-------+---------------+
| name                            | hours | med_high_rank |
+---------------------------------+-------+---------------+
| Maltz Museum of Jewish Heritage |  None | medium        |
| Charley's Grilled Subs          |  None | medium        |
| Sixth & Pine                    |  None | high          |
| Beechmont Country Club          |  None | high          |
| Hyde Park Prime Steakhouse      |  None | high          |
| Origins                         |  None | high          |
| Fyodor Bridal Atelier           |  None | high          |
| College Planning Network        |  None | medium        |
| Shaker Women's Wellness         |  None | high          |
| Avis Rent A Car                 |  None | medium        |
| Cleveland Acupuncture           |  None | high          |
| Studio Mz                       |  None | high          |
+---------------------------------+-------+---------------+

As one can see, none of the businesses have any hours, so we can not draw a conclusion from this.

ii. Do the two groups you chose to analyze have a different number of reviews?
SELECT avg(review_count),
CASE  
WHEN Stars <2 THEN 'low'
WHEN Stars >=2 and Stars <= 3 THEN 'medium'
WHEN Stars >=4 and Stars <= 5 THEN 'high' END med_high_rank
FROM Business 
WHERE (med_high_rank = 'medium' OR med_high_rank = 'high') and City = 'Beachwood'
GROUP BY med_high_rank 

gets us the following table

+-------------------+---------------+
| avg(review_count) | med_high_rank |
+-------------------+---------------+
|            13.625 | high          |
|               5.5 | medium        |
+-------------------+---------------+

So we see that highly rated businesses get more reviews than medium rated businesses in Beachwood.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
From the code below, we get the table: 
+--------------+------------------------------+-------------+---------------+
| neighborhood | address                      | postal_code | med_high_rank |
+--------------+------------------------------+-------------+---------------+
|              | Nordstrom, 26200 Cedar Rd    | 44122       | high          |
|              | 29600 Chagrin Blvd           | 44122       | high          |
|              | 26300 Chagrin Blvd           | 44122       | high          |
|              | 26300 Cedar Rd, Ste 2048     | 44122       | high          |
|              | 2111 Richmond Rd             | 44122       | high          |
|              | 24300 Chagrin Blvd, Ste 103  | 44122       | high          |
|              | 25200 Chagrin Blvd, Ste 103  | 44122       | high          |
|              | 27629 Chagrin Blvd, Ste 101B | 44122       | high          |
|              | 2929 Richmond Rd             | 44122       | medium        |
|              | 26300 Cedar Rd               | 44122       | medium        |
|              | 23625 Commerce Park, Ste 200 | 44122       | medium        |
|              | 27900 Chagrin Blvd, Ste 1    | 44122       | medium        |
+--------------+------------------------------+-------------+---------------+

We can see that Chagrin Blvd has quite a few highly rated places, meaning is probably a richer or commercial street. It also has the most places in general, so it is probably in the city centre.


SQL code used for analysis:
SELECT Neighborhood, address, postal_code,
CASE  
WHEN Stars <2 THEN 'low'
WHEN Stars >=2 and Stars <= 3 THEN 'medium'
WHEN Stars >=4 and Stars <= 5 THEN 'high' END med_high_rank
FROM Business 
WHERE (med_high_rank = 'medium' OR med_high_rank = 'high') and City = 'Beachwood'
ORDER BY med_high_rank 
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
+---------+-------------------+
| is_open | avg(review_count) |
+---------+-------------------+
|       0 |     23.1980263158 |
|       1 |     31.7570754717 |
+---------+-------------------+

open places have more reviews on average.
         
ii. Difference 2:
+---------+---------------+
| is_open |    avg(stars) |
+---------+---------------+
|       0 | 3.52039473684 |
|       1 | 3.67900943396 |
+---------+---------------+
         
Open places are ranked (a bit) higher than closed places.
         
SQL code used for analysis:
SELECT is_open, avg(review_count) FROM business
GROUP BY is_open

SELECT is_open, avg(stars) FROM business
GROUP BY is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
        A simple analysis to see whether or not businesses in Las Vegas get more reviews containing the word 'love' on average than other cities.
	I know this analysis seems janky/pretty short, but it was the only thing I could think of where I would need to join data sets and use a CASE statement...
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	We will need to group two tables together, namely the business and review tables. From this big table, we only need the city name, and a dummy variable that shows that the review text contains the word 'love'. 
	Then, we will need to find the percentage of reviews with 'love' in it, by doing SUM(binary variable)/COUNT(binary variable), and group this calculation by cities.
	
                  
iii. Output of your finished dataset:
        +--------------+-------+-----------+
	| sum_of_loves | total | lv_or_not |
	+--------------+-------+-----------+
	|           39 |  1622 | Las Vegas |
	|           88 |  8507 | Other     |
	+--------------+-------+-----------+
         
iv. Provide the SQL code you used to create your final dataset:
SELECT 
SUM(CASE WHEN r.text lIKE '%love%' THEN 1 ELSE 0 END) AS sum_of_loves,
COUNT(CASE b.city WHEN 'Las Vegas' THEN 'Las Vegas' ELSE 'Other' END) AS total,
CASE b.city WHEN 'Las Vegas' THEN 'Las Vegas' ELSE 'Other' END AS lv_or_not
FROM business b
LEFT JOIN review r ON b.id = r.business_id
GROUP BY lv_or_not