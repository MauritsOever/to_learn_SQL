###########################################################################################
#### WEEK 1 ###############################################################################
###########################################################################################

SELECT statement:
e.g.	SELECT prod_name, prod_price, prod_sales (column name), can also put * for all columns
	FROM products (table)
	LIMIT (number); first 5 records for instance if df is large

output:	{Shampoo, toothpaste, etc.}



CREATE TABLE Shoes
(
id	char(10)	PRIMARY KEY,	# not null can not accept nans, but null columns can
Brand	char(10)	NOT NULL,	# null != empty string
type	char(250)	NOT NULL,	# primary keys cannot have nulls
price	decimals(8,2)	NOT NULL,
desc	Varchar(750)	NULL
);

then

INSERT INTO Shoes
VALUES ('23423', 'Gucci', 'slippers', '420', NULL); #insert a row

but better is

INSERT INTO Shoes
	(id, brand, type, price, desc)
VALUES	('23423', 'Gucci', 'slippers', '420', NULL);


temporary tables
faster than real tables

CREATE TEMPORARY TABLE Sandels AS
( 	SELECT * 
	FROM shoes
	where type = 'sandals'
);

comments in sql

line comment: --
block: /*  */ 


https://towardsdatascience.com/starting-with-sql-in-python-948e529586f2
https://www.ntchosting.com/encyclopedia/databases/structured-query-language/
pretty ez shiii

Select BillingAddress
From Invoices
Where CustomerId = 31 and FirstName = 'steven'
Limit 1; (an example)

###########################################################################################
#### WEEK 2 ###############################################################################
###########################################################################################


